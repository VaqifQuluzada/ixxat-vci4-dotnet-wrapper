<!--

  Main MSBUILD file
    Needs the following parameters:
      Version:          version number, e.g. 4.1.0-beta
      SourceRevisionId: git hash
      RepositoryUrl:    git repo url
      RepositoryType:   e.g. git
      RepositoryBranch: e.g. main
    Execute this with:
      msbuild -p:Version=4.1.0-beta -p:SourceRevisionId=2342340aa495a33574f48616ab58c9477a3bc34d -p:RepositoryUrl=https://github.com/HMS/Ixxat.VCI4 -p:RepositoryType=git -p:RepositoryBranch=main

-->
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">

    <PropertyGroup>
        <Version Condition="'$(Version)' == ''">1.0.0.0</Version>
        <AssemblyVersion Condition="'$(AssemblyVersion)' == ''">$(Version.Split('-')[0])</AssemblyVersion>
        <FileVersion Condition="'$(FileVersion)' == ''">$(Version.Split('-')[0])</FileVersion>
        <Major>$([System.Text.RegularExpressions.Regex]::Match($(AssemblyVersion), `(\d+).(\d+).(\d+).*`).Groups[1].Value)</Major>
        <Minor>$([System.Text.RegularExpressions.Regex]::Match($(AssemblyVersion), `(\d+).(\d+).(\d+).*`).Groups[2].Value)</Minor>
        <Patch>$([System.Text.RegularExpressions.Regex]::Match($(AssemblyVersion), `(\d+).(\d+).(\d+).*`).Groups[3].Value)</Patch>
        <InformationalVersion Condition="'$(InformationalVersion)' == ''">$(Version)</InformationalVersion>
        <Authors Condition="'$(Authors)' == ''">HMS Networks</Authors>
        <CompanyName>HMS Technology Center Ravensburg GmbH</CompanyName>
        <Description Condition="'$(Description)' == ''">Access CAN interfaces from Ixxat/HMS Networks via .NET and VCI4-API</Description>
        <Copyright Condition="'$(Copyright)' == ''">Copyright (C) 2016-2022 HMS Technology Center Ravensburg GmbH, all rights reserved</Copyright>
    </PropertyGroup>

    <Target Name="WriteLibVerHeader" BeforeTargets="compile_native_components">
        <PropertyGroup>
            <LibVerContent>
// generated by buildscript
    
#ifndef _LIBVER_H_
#define _LIBVER_H_

  // macro to convert version number to text
  #define LIB_VERSION_ASTEXT2(x)     #x
  #define LIB_VERSION_ASTEXT(x) LIB_VERSION_ASTEXT2(x)

/*****************************************************************************
 * LIB version number
 ****************************************************************************/
   // Major version number
  #define LIB_A_VERSION      $(Major)
  #define LIB_A_VERSION_STR  LIB_VERSION_ASTEXT(LIB_A_VERSION)

  // Minor version number
  #define LIB_B_VERSION      $(Minor)
  #define LIB_B_VERSION_STR  LIB_VERSION_ASTEXT(LIB_B_VERSION)

  // Revision number
  #define LIB_C_VERSION      $(Patch)
  #define LIB_C_VERSION_STR  LIB_VERSION_ASTEXT(LIB_C_VERSION)
  
  // Build number
  #define LIB_D_VERSION      0
  #define LIB_D_VERSION_STR  LIB_VERSION_ASTEXT(LIB_C_VERSION)
  
  // debug/release
  //
  #ifdef _DEBUG
    #define LIB_VI_BUILDTYPE_STR   "debug"
  #else
    #define LIB_VI_BUILDTYPE_STR   "release"
  #endif

/*****************************************************************************
 * LIB version information
 ****************************************************************************/
  #define LIB_VI_COPYRIGHT_STR     "$(Copyright)"
  #define LIB_VI_COMPANY_NAME_STR  "$(CompanyName)"
  #define LIB_VI_PRODUCT_NAME_STR  "vci4net"
  #define LIB_VI_SPECIALBUILD_STR  "$(SourceRevisionId)"

  #define LIB_VI_FILE_VERS      LIB_A_VERSION, LIB_B_VERSION, LIB_C_VERSION, LIB_D_VERSION
  #define LIB_VI_FILE_VERS_STR  LIB_VERSION_ASTEXT(LIB_VI_FILE_VERS)

#endif
          </LibVerContent>
        </PropertyGroup>

        <WriteLinesToFile
          File="src/inc/libver.h"
          Overwrite="true"
          Lines="$(LibVerContent)" />
    </Target>

    <PropertyGroup>
        <ContractProject>src\contract\Ixxat.Vci4.Contract.csproj</ContractProject>
        <LoaderProject>src\loader\Ixxat.Vci4.csproj</LoaderProject>
        <NativeProject>src\impl\vcinet.vcxproj</NativeProject>
        <NativeProjectStrongNamed>\src\impl\vcinet_sn.vcxproj</NativeProjectStrongNamed>
    </PropertyGroup>

    <Target Name="compile_managed_components">
        <!-- restore nuget packages -->
        <Exec Command="dotnet.exe restore $(ContractProject)" />
        <Exec Command="dotnet.exe restore $(LoaderProject)" />

        <MSBuild Projects="$(ContractProject)" Targets="Rebuild" Properties="Configuration=Release" />
        <MSBuild Projects="$(LoaderProject)"   Targets="Rebuild" Properties="Configuration=Release" />
    </Target>

    <Target Name="compile_native_components" DependsOnTargets="compile_managed_components">
        <MSBuild Projects="$(NativeProject)" Targets="Rebuild" Properties="Configuration=Release;Platform=Win32;Framework=net40" />
        <MSBuild Projects="$(NativeProject)" Targets="Rebuild" Properties="Configuration=Release;Platform=x64;Framework=net40" />
        <MSBuild Projects="$(NativeProject)" Targets="Rebuild" Properties="Configuration=Release;Platform=Win32;Framework=netcoreapp3.1" />
        <MSBuild Projects="$(NativeProject)" Targets="Rebuild" Properties="Configuration=Release;Platform=x64;Framework=netcoreapp3.1" />
        <MSBuild Projects="$(NativeProject)" Targets="Rebuild" Properties="Configuration=Release;Platform=Win32;Framework=net5.0-windows" />
        <MSBuild Projects="$(NativeProject)" Targets="Rebuild" Properties="Configuration=Release;Platform=x64;Framework=net5.0-windows" />
        <MSBuild Projects="$(NativeProject)" Targets="Rebuild" Properties="Configuration=Release;Platform=Win32;Framework=net6.0-windows" />
        <MSBuild Projects="$(NativeProject)" Targets="Rebuild" Properties="Configuration=Release;Platform=x64;Framework=net6.0-windows" />

        <MSBuild Projects="$(NativeProject)" Targets="Rebuild" Properties="Configuration=Debug;Platform=Win32;Framework=net40" />
        <MSBuild Projects="$(NativeProject)" Targets="Rebuild" Properties="Configuration=Debug;Platform=x64;Framework=net40" />
        <MSBuild Projects="$(NativeProject)" Targets="Rebuild" Properties="Configuration=Debug;Platform=Win32;Framework=netcoreapp3.1" />
        <MSBuild Projects="$(NativeProject)" Targets="Rebuild" Properties="Configuration=Debug;Platform=x64;Framework=netcoreapp3.1" />
        <MSBuild Projects="$(NativeProject)" Targets="Rebuild" Properties="Configuration=Debug;Platform=Win32;Framework=net5.0-windows" />
        <MSBuild Projects="$(NativeProject)" Targets="Rebuild" Properties="Configuration=Debug;Platform=x64;Framework=net5.0-windows" />
        <MSBuild Projects="$(NativeProject)" Targets="Rebuild" Properties="Configuration=Debug;Platform=Win32;Framework=net6.0-windows" />
        <MSBuild Projects="$(NativeProject)" Targets="Rebuild" Properties="Configuration=Debug;Platform=x64;Framework=net6.0-windows" />
    </Target>

    <PropertyGroup>
        <NugetTargetDir>nuget</NugetTargetDir>
    </PropertyGroup>

    <PropertyGroup>
        <Namespace>
            <Namespace Prefix="nuget" Uri="http://schemas.microsoft.com/packaging/2011/08/nuspec.xsd" />
        </Namespace>
    </PropertyGroup>

    <PropertyGroup>
        <Packagefile Condition="'$(AssemblyKeyFileAttribute)' == ''" >Ixxat.Vci4.nuspec</Packagefile>
        <Packagefile Condition="'$(AssemblyKeyFileAttribute)' != ''" >Ixxat.Vci4.StrongName.nuspec</Packagefile>
        <ManualPackagefile>Ixxat.Vci4.Manual.nuspec</ManualPackagefile>
    </PropertyGroup>

    <Target Name="buildnugetpackage" Inputs="@(Packagefiles)" Outputs="%(Identity).Dummy">
        <!-- pack nuget package -->
        <Exec WorkingDirectory="$(NugetTargetDir)" Command="c:\ut\nuget\6.3.0\nuget.exe pack $(Packagefile) -Version $(Version) -p SourceRevisionId=$(SourceRevisionId)" />
        <!-- pack symbol package -->
        <Exec WorkingDirectory="$(NugetTargetDir)" Command="c:\ut\nuget\6.3.0\nuget.exe pack $(Packagefile) -Version $(Version) -p SourceRevisionId=$(SourceRevisionId) -Symbols -SymbolPackageFormat snupkg" />
        <!-- pack manual package -->
        <Exec WorkingDirectory="$(NugetTargetDir)" Command="c:\ut\nuget\6.3.0\nuget.exe pack $(ManualPackagefile) -Version $(Version) -p SourceRevisionId=$(SourceRevisionId)" />
    </Target>

    <Target Name="createnugetpackages" DependsOnTargets="compile_managed_components">

        <!-- delete any .nupkg files -->
        <Delete Files="$(NugetTargetDir)\*.nupkg" />
        <CallTarget Targets="compile_native_components" />
        <CallTarget Targets="buildnugetpackage" />
    
    </Target>

    <Target Name="Build" DependsOnTargets="createnugetpackages">
    </Target>
</Project>